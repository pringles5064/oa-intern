{"ast":null,"code":"// This function below will convert the data in states.js to geojson format \n//Week 3 Task 1\n\nexport const convertToGeoJSON = data => {\n  const geoJsonForm = {\n    type: 'FeatureCollection',\n    features: data.map(state => ({\n      type: 'Feature',\n      properties: {\n        name: state.name,\n        id: state.id,\n        CENSUSAREA: state.CENSUSAREA\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [state.geometry[0]]\n      }\n    }))\n  };\n  return geoJsonForm;\n};","map":{"version":3,"names":["convertToGeoJSON","data","geoJsonForm","type","features","map","state","properties","name","id","CENSUSAREA","geometry","coordinates"],"sources":["C:/Users/saira/OneDrive/Desktop/Pappa/map-dashboard/src/geojsonConverter.js"],"sourcesContent":["// This function below will convert the data in states.js to geojson format \r\n//Week 3 Task 1\r\n\r\nexport const convertToGeoJSON = (data) => {\r\n    const geoJsonForm = {\r\n      type: 'FeatureCollection',\r\n      features: data.map((state) => ({\r\n        type: 'Feature',\r\n        properties: {\r\n          name: state.name,\r\n          id: state.id,\r\n          CENSUSAREA: state.CENSUSAREA,\r\n        },\r\n        geometry: {\r\n          type: 'Polygon',\r\n          coordinates: [state.geometry[0]],\r\n        },\r\n      })),\r\n    };\r\n  \r\n    return geoJsonForm;\r\n  };\r\n  "],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,gBAAgB,GAAIC,IAAI,IAAK;EACtC,MAAMC,WAAW,GAAG;IAClBC,IAAI,EAAE,mBAAmB;IACzBC,QAAQ,EAAEH,IAAI,CAACI,GAAG,CAAEC,KAAK,KAAM;MAC7BH,IAAI,EAAE,SAAS;MACfI,UAAU,EAAE;QACVC,IAAI,EAAEF,KAAK,CAACE,IAAI;QAChBC,EAAE,EAAEH,KAAK,CAACG,EAAE;QACZC,UAAU,EAAEJ,KAAK,CAACI;MACpB,CAAC;MACDC,QAAQ,EAAE;QACRR,IAAI,EAAE,SAAS;QACfS,WAAW,EAAE,CAACN,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC;MACjC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,OAAOT,WAAW;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}